// ----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// ----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Responsive manager
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
/// @link http://sass-guidelin.es/#breakpoint-manager Sass Guidelines - Breakpoint Manager
@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);

  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}


/// Micro Clearfix
/// @link http://nicolasgallagher.com/micro-clearfix-hack

@mixin micro-clearfix() {
  // & {
  //   *zoom: 1;
  // }
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}


/// OOCSS Media Object
/// @link https://gist.github.com/zachharkey/5224086
/// @requires $micro-clearfix

@mixin media-object($container: '.media-object', $img: '.media-object__img', $bd: '.media-object__body', $margin: 10px, $position: 'left', $formatting-context: 'overflow', $flex: true) {
  @if $flex == true {
    #{unquote($container)} {
      display: flex;
      align-items: flex-start;
    }
    #{unquote($img)} {
      margin-right: $margin;
    }
    #{unquote($bd)} {
      flex: 1;
    }
  } @else {
    #{unquote($container)} {
      @include micro-clearfix;
    }
    #{unquote($bd)} {
      @if $formatting-context == 'overflow' {
        overflow: hidden;
      } @else {
        display: table-cell;
        width: 10000px;
        *width: auto;
        *zoom: 1;
      }
    }
    #{unquote($img)} {
      float: $position;
      img { display:block; }
      @if $margin > 0 {
        @if $position == 'left' {
          margin-right: $margin;
        } else {
          margin-left: $margin;
        }
      }
    }
  }
}


/// Hide Text

@mixin hide-text {  
  text-indent: -10000em;
  overflow: hidden;
  white-space: nowrap;
}
